openapi: "3.0.4"

info:
  version: "0.3.0"
  title: Music API
  description: This is a sample Muzicplayz server.

servers:
  - url: https://api.muzicplayz.com/v3

tags:
  - name: Your Library
    description: Get, Create & Delete your Playlists
    externalDocs:
      description: More Info
      url: https://api.muzicplayz.com/v3/yourlibrary
  

paths:
  /playlist:
    get:
      operationId: getplaylists
      security:
        - basauth: []
      description: Returns all the playlists.
      tags:
        - Your Library
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of playlists to return
        - name: offset
          in: query
          required: false
          description: Index of the first playlist to return
          schema:
            type: integer
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Searches a particular type of song
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/playlistwithsongs"

    post:
      operationId: postplaylist
      security:
        - basauth: []
      description: Creates a new playlist.
      tags:
        - Your Library
      requestBody:
        description: New playlist to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newPlaylist"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playlistwithsongs"

  /playlist/{playlist-id}:
    get:
      operationId: getspecplaylist
      security:
        - basauth: []
      description: Returns a specific playlist using playlist-id.
      tags:
        - Your Library
      parameters:
        - name: playlist-id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playlistwithsongs"

    delete:
      operationId: deleteplaylist
      security:
        - basauth: []
      description: Deletes a playlist.
      tags:
        - Your Library
      parameters:
        - name: playlist-id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        401:
          description: Already Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /playlist/{playlist-id}/image:
    get:
      operationId: getimage
      security:
        - basauth: []
      description: Returns a specific playlist in image form.
      tags:
        - Your Library
      parameters:
        - name: playlist-id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary

components:
  schemas:
    newPlaylist:
      type: object
      properties:
        name:
          type: string
        songIds:
          type: array
          items:
            type: integer
      required:
        - name
        - songIds

    playlistwithsongs:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        songs:
          type: array
          items:
            $ref: "#/components/schemas/song"

    song:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        artist:
          type: string

    error:
      type: object
      properties:
        errormsg:
          type: string
        logdata:
          type: object
          properties:
            entry:
              type: integer
            date:
              type: integer

  securitySchemes:
      basauth:
        type: http
        scheme: basic
